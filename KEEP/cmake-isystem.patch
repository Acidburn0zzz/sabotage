On systems that support -isystem, CMAKE turns all include paths returned from
pkg-config from -I foo to -isystem foo, for the sake of suppressing warnings.
unfortunately this breaks C++ headers #include_next include order.

/include/c++/6.3.0/cstdlib:75:25: fatal error: stdlib.h: No such file or directory
 #include_next <stdlib.h>
                         ^
this happens when -I /include ends up in the pkg-config output. the cmake
devs argue that pkg-config should never return the default include dir.
I argue that they shouldn't mess around with the system include dir order.

--- cmake-2.8.12.2.org/Modules/Compiler/GNU.cmake	2017-01-16 18:59:17.872468517 +0000
+++ cmake-2.8.12.2/Modules/Compiler/GNU.cmake	2017-01-16 19:09:17.956966428 +0000
@@ -51,7 +51,6 @@
   set(CMAKE_${lang}_FLAGS_RELWITHDEBINFO_INIT "-O2 -g -DNDEBUG")
   set(CMAKE_${lang}_CREATE_PREPROCESSED_SOURCE "<CMAKE_${lang}_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>")
   set(CMAKE_${lang}_CREATE_ASSEMBLY_SOURCE "<CMAKE_${lang}_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>")
-  if(NOT APPLE)
-    set(CMAKE_INCLUDE_SYSTEM_FLAG_${lang} "-isystem ")
-  endif()
+  set(CMAKE_INCLUDE_SYSTEM_FLAG_C)
+  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX)
 endmacro()
--- cmake-2.8.12.2.org/Modules/Compiler/Clang.cmake	2017-01-16 18:59:17.872468517 +0000
+++ cmake-2.8.12.2/Modules/Compiler/Clang.cmake	2017-01-16 19:09:45.420623085 +0000
@@ -23,6 +23,7 @@
 macro(__compiler_clang lang)
   __compiler_gnu(${lang})
   set(CMAKE_${lang}_COMPILE_OPTIONS_PIE "-fPIE")
-  set(CMAKE_INCLUDE_SYSTEM_FLAG_${lang} "-isystem ")
+  set(CMAKE_INCLUDE_SYSTEM_FLAG_C)
+  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX)
   set(CMAKE_${lang}_COMPILE_OPTIONS_VISIBILITY "-fvisibility=")
 endmacro()
