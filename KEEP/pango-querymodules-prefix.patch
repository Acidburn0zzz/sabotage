--- pango-1.30.0.org/pango/querymodules.c
+++ pango-1.30.0/pango/querymodules.c
@@ -110,6 +110,9 @@
   return value->value_nick;
 }
 
+
+static char* prefix = "";
+
 static void
 query_module (const char *dir, const char *name)
 {
@@ -147,16 +150,17 @@
 	{
 	  const gchar *quote;
 	  gchar *quoted_path;
+	size_t l = strlen(prefix);
 
-	  if (string_needs_escape (path))
+	  if (string_needs_escape (path + l))
 	    {
 	      quote = "\"";
-	      quoted_path = escape_string (path);
+	      quoted_path = escape_string (path + l);
 	    }
 	  else
 	    {
 	      quote = "";
-	      quoted_path = g_strdup (path);
+	      quoted_path = g_strdup (path + l);
 	    }
 
 	  g_printf ("%s%s%s %s %s %s", quote, quoted_path, quote,
@@ -199,40 +203,15 @@
   char *cwd;
   int i;
   char *path;
-  GOptionContext *context;
-  GError *parse_error = NULL;
-  GOptionEntry entries[] =
-    {
-      {"version",	0, G_OPTION_FLAG_NO_ARG, G_OPTION_ARG_CALLBACK, &show_version,
-       "Show version numbers",                                             NULL},
-      {NULL}
-    };
+	char buf[4096];
 
-  context = g_option_context_new ("- [MODULE]...");
-  g_option_context_add_main_entries (context, entries, NULL);
-
-  if (!g_option_context_parse (context, &argc, &argv, &parse_error))
-    {
-      if (parse_error != NULL)
-	{
-	  g_printerr("Parse option error: %s\n", parse_error->message);
-	}
-      else
-	{
-	  g_printerr("Parse option error\n");
-	}
-      exit(1);
-    }
-
-  g_option_context_free(context);
-
   g_type_init ();
 
   g_printf ("# Pango Modules file\n"
 	    "# Automatically generated file, do not edit\n"
 	    "#\n");
 
-  if (argc == 1)		/* No arguments given */
+  if (argc == 1 || (argc == 2 && !memcmp(argv[1], "prefix=", 7)))		/* No arguments given */
     {
       char **dirs;
       int i;
@@ -244,11 +223,18 @@
 				 "modules",
 				 NULL);
 
+	if(argc == 2) prefix=argv[1]+7;
+	snprintf(buf, sizeof(buf), "%s%s", prefix, path);
+
+      g_free (path);
+
+	path=buf;
+
+
       g_printf ("# ModulesPath = %s\n#\n", path);
 
       dirs = pango_split_file_list (path);
 
-      g_free (path);
 
       for (i=0; dirs[i]; i++)
 	{
