this fixes random junk in the last 6 bytes of the generated
binary representations of long double nan and inf, which
breaks reproducible builds (on x86 which has 80bit long double).

--- Configure
+++ perl-5.24.3/Configure
@@ -20518,16 +20518,18 @@
 #ifdef HAS_LONG_DOUBLE
    long double ldinf = (long double)exp(1e9);
    long double ldnan = (long double)sqrt(-1.0);
+# if LONGDBLKIND == 3 || LONGDBLKIND == 4
+/* the 80-bit long doubles might have garbage in their excess bytes */
+    memset(((char *)&ldinf) + 10, '\0', LONGDBLSIZE - 10);
+    memset(((char *)&ldnan) + 10, '\0', LONGDBLSIZE - 10);
+# endif
+
 #endif
   if (argc == 2) {
     switch (argv[1][0]) {
     case '1': bytes(&dinf, sizeof(dinf)); break;
     case '2': bytes(&dnan, sizeof(dnan)); break;
 #ifdef HAS_LONG_DOUBLE
-# if LONG_DOUBLEKIND == 3 || LONG_DOUBLEKIND == 4
-/* the 80-bit long doubles might have garbage in their excess bytes */
-    memset((char *)&ldinf + 10, '\0', LONG_DOUBLESIZE - 10);
-# endif
     case '3': bytes(&ldinf, sizeof(ldinf)); break;
     case '4': bytes(&ldnan, sizeof(ldnan)); break;
 #endif
