[deps]
gcc4
xz
grsec

[mirrors]
http://www.kernel.org/pub/linux/kernel/v3.0/linux-3.8.8.tar.xz
ftp://ftp.kernel.org/pub/linux/kernel/v3.0/linux-3.8.8.tar.xz
http://ftp.free.fr/pub/linux/kernel/v3.0/linux-3.8.8.tar.xz
http://ftp.heanet.ie/mirrors/linux/kernel/v3.0/linux-3.8.8.tar.xz

[main]
filesize=70996968
sha512=e4ba66fea6b8fb19ad3e8defbea2e26c61645600c501fc2b3c12aea9de6dfe00f7e5870fc6eb33b29585d5bb4e3c65c8ebc1b9bb841f11cb487b36a6b01dff7f

[build]
# get into menuconfig using
# make HOSTCFLAGS="-D_GNU_SOURCE" HOSTLDFLAGS=-lncurses menuconfig

dopatch() {
	echo "applying patch $1"
	if ! patch -p1 < "$1" ; then
		echo "patch failed!"
		exit 1
	fi
}

#noperl and qemu patches from landley.net/aboriginal
dopatch "$K"/linux-noperl-capflags.patch 
dopatch "$K"/linux-noperl-headers.patch
dopatch "$K"/linux-noperl-timeconst.patch

# fix the broken "ncurses detector" which fails, and even worse removes our HOSTLDFLAGS
dopatch "$K"/linux-menuconfig.patch

# patches to support busybox trap and sed with strict musl BRE engine
dopatch "$K"/linux-3.8-trap.patch
dopatch "$K"/linux-3.8-posix_sed.patch

if [ -z "$DISABLE_GRSEC" ] ; then
	patchname=grsecurity-2.9.1-3.8.8-201304181923.patch
	tar xf "$C"/"$patchname".tar.xz || exit 1
	ln -sf "$patchname" grsec.patch
	patch -p1 < "$K"/grsecurity-2.91_201304061345_vs_perl_removal.patch || exit 1 #patch patch
	dopatch grsec.patch
	# the patch is buggy and adds some includes that are non-existing at all points.
	dopatch "$K"/grsecurity-2.91patch.patch
fi

export ARCH=$A
linux_config="$K"/linux.config

if [ -z "$HOSTCC" ] ; then
	HOSTCC="$CC"
fi

if [ "$A" = arm ] ; then
	[ -z "$ARM_ARCH" ] && (echo "error: need to set ARM_ARCH to 4-7" ; exit 1)
	linux_config="$linux_config $K/linux.config.armv${ARM_ARCH}l"
fi

cat "$linux_config" > my.config

make V=1 ARCH=$A allnoconfig HOSTCFLAGS="-D_GNU_SOURCE" \
  KCONFIG_ALLCONFIG=my.config DISABLE_PAX_PLUGINS=y || exit 1

make V=1 ARCH=$A HOSTCFLAGS=-D_GNU_SOURCE INSTALL_HDR_PATH=dest \
  DISABLE_PAX_PLUGINS=y headers_install || exit 1

find dest/include \( -name .install -o -name ..install.cmd \) -delete

# FIXME clean up $R usage
cp -rv dest/include/* $R/include/
#fix ext2 header...
cp -f $K/ext2_fs.h $R/include/linux/

# usually when using an ARM/MIPS system you dont want to build a generic kernel
# you have to use a heavily patched vendor specific one
if [ "$A" = "arm" ] || [ "$A" = "mips" ] ; then
	SKIP_KERNEL_COMPILE=1
fi

if [ -z "$SKIP_KERNEL_COMPILE" ] ; then

#let make create dependencies, otherwise parallel build wont work
make v=1 CC="$CC" HOSTCC="$HOSTCC" ARCH=$A HOSTCFLAGS=-D_GNU_SOURCE \
  DISABLE_PAX_PLUGINS=y dep || exit 1

make V=1 -j$MAKE_THREADS CC="$CC" ARCH=$A HOSTCC="$HOSTCC" \
  HOSTCFLAGS=-D_GNU_SOURCE DISABLE_PAX_PLUGINS=y || exit 1

make INSTALL_MOD_PATH=$R DISABLE_PAX_PLUGINS=y modules_install || exit 1

mkdir -p $R/boot $R/lib/modules $R/lib/firmware
cp System.map $R/boot/

if [ "$A" = arm ] ; then
	kpath="arch/arm/boot/zImage"
else
	kpath="arch/x86/boot/bzImage"
fi
cp $kpath $R/boot/vmlinuz

fi

exit 0
